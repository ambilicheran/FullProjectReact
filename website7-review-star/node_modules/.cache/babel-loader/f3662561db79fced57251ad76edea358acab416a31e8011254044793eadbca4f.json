{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/website1/src/Components/PostList.js\",\n  _s = $RefreshSig$();\nimport Post from \"./Post\";\nimport classes from \"./PostList.module.css\";\nimport NewPost from \"./NewPost\";\nimport { useEffect, useState } from \"react\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostList(props) {\n  _s();\n  /*    const [posts, setPosts] = useState([]);\n  function addPostHandler(postData) {\n  setPosts((existingPosts) => [\n  postData,\n  ...existingPosts\n  ]);\n  }   */\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function fetchPosts() {\n      setIsLoading(true);\n      const response = await fetch(\"http://localhost:8080/posts\");\n      const resData = await response.json();\n      setPosts(resData.posts);\n      setIsLoading(false);\n    }\n    fetchPosts();\n  }, []);\n  function addPostHandler(postData) {\n    fetch(\"http://localhost:8080/posts\", {\n      method: \"POST\",\n      body: JSON.stringify(postData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    setPosts(existingPosts => [postData, ...existingPosts]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.modalIsVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.closeModal,\n      children: /*#__PURE__*/_jsxDEV(NewPost, {\n        onClose: props.closeModal,\n        onAddPost: addPostHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.posts,\n      children: [posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        author: post.author,\n        book: post.book\n      }, post.body, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 41\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"blue\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true);\n}\n_s(PostList, \"9EbuWposWmGSKTvULeBrk34wPps=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["Post","classes","NewPost","useEffect","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","props","_s","posts","setPosts","isLoading","setIsLoading","fetchPosts","response","fetch","resData","json","addPostHandler","postData","method","body","JSON","stringify","headers","existingPosts","children","modalIsVisible","onClose","closeModal","onAddPost","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","post","author","book","style","color","textAlign","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/website1/src/Components/PostList.js"],"sourcesContent":["import Post from \"./Post\"\nimport classes from \"./PostList.module.css\"\nimport NewPost from \"./NewPost\"\nimport {useEffect, useState} from \"react\"\nimport Modal from \"./Modal\"\n\nfunction PostList(props) { /*    const [posts, setPosts] = useState([]);\n    function addPostHandler(postData) {\n        setPosts((existingPosts) => [\n            postData,\n            ...existingPosts\n        ]);\n    }   */\n    const [posts, setPosts] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(() => {\n        async function fetchPosts() {\n            setIsLoading(true);\n            const response = await fetch(\"http://localhost:8080/posts\")\n            const resData = await response.json();\n            setPosts(resData.posts);\n            setIsLoading(false);\n        }\n        fetchPosts();\n    }, [])\n\n    function addPostHandler(postData) {\n        fetch(\"http://localhost:8080/posts\", {\n            method: \"POST\",\n            body: JSON.stringify(postData),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        });\n        setPosts((existingPosts) => [\n            postData,\n            ...existingPosts\n        ]);\n    }\n\n    return (\n        <>{\n            props.modalIsVisible && (\n                <Modal onClose={\n                    props.closeModal\n                }>\n                    <NewPost onClose={\n                            props.closeModal\n                        }\n                        onAddPost={addPostHandler}/>\n                </Modal>\n            )\n        }\n            {\n            posts.length > 0 ? (\n                <ul className={\n                    classes.posts\n                }>\n                    {\n                    posts.map((post) => <Post key={\n                            post.body\n                        }\n                        author={\n                            post.author\n                        }\n                        book={\n                            post.book\n                        }/>)\n                } </ul>\n            ) : (\n                <div style={\n                    {\n                        color: \"blue\",\n                        textAlign: \"center\"\n                    }\n                }>\n                    <h2>No posts yet.</h2>\n                    <p>Start adding some!</p>\n                </div>\n            )\n        } </>\n    )\n}\nexport default PostList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}