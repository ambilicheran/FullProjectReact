{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const gridRef = useRef < HTMLCanvasElement > null;\n  const [lines, setLines] = useState([]);\n  useEffect(() => {\n    const calculateLines = () => {\n      const canvas = gridRef.current;\n      const ctx = canvas.getContext(\"2d\");\n      const gridWidth = canvas.width;\n      const gridHeight = canvas.height;\n      const xPositions = [gridWidth / 2, gridWidth - 10];\n      const yPositions = [gridHeight / 2, gridHeight - 10];\n      const lines = [];\n      for (let i = 0; i < xPositions.length; i++) {\n        const startX = xPositions[i];\n        const startY = 0;\n        const endX = startX;\n        const endY = gridHeight;\n        lines.push({\n          startX,\n          startY,\n          endX,\n          endY\n        });\n      }\n      for (let i = 0; i < yPositions.length; i++) {\n        const startX = 0;\n        const startY = yPositions[i];\n        const endX = gridWidth;\n        const endY = startY;\n        lines.push({\n          startX,\n          startY,\n          endX,\n          endY\n        });\n      }\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      for (const line of lines) {\n        ctx.strokeLine(line.startX, line.startY, line.endX, line.endY);\n      }\n      setLines(lines);\n    };\n    calculateLines();\n    return () => {\n      canvas.removeEventListener(\"resize\", calculateLines);\n    };\n  }, [gridRef]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: gridRef,\n    width: 200,\n    height: 200,\n    style: {\n      border: \"1px solid black\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rXCgyOSha7nD7LaunrnbH7EjheQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","App","_s","gridRef","HTMLCanvasElement","lines","setLines","calculateLines","canvas","current","ctx","getContext","gridWidth","width","gridHeight","height","xPositions","yPositions","i","length","startX","startY","endX","endY","push","clearRect","line","strokeLine","removeEventListener","ref","style","border","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  const gridRef = useRef < HTMLCanvasElement > null;\n  const [lines, setLines] = useState([]);\n\n  useEffect(() => {\n    const calculateLines = () => {\n      const canvas = gridRef.current;\n      const ctx = canvas.getContext(\"2d\");\n\n      const gridWidth = canvas.width;\n      const gridHeight = canvas.height;\n\n      const xPositions = [gridWidth / 2, gridWidth - 10];\n\n      const yPositions = [gridHeight / 2, gridHeight - 10];\n\n      const lines = [];\n      for (let i = 0; i < xPositions.length; i++) {\n        const startX = xPositions[i];\n        const startY = 0;\n        const endX = startX;\n        const endY = gridHeight;\n\n        lines.push({\n          startX,\n          startY,\n          endX,\n          endY,\n        });\n      }\n\n      for (let i = 0; i < yPositions.length; i++) {\n        const startX = 0;\n        const startY = yPositions[i];\n        const endX = gridWidth;\n        const endY = startY;\n\n        lines.push({\n          startX,\n          startY,\n          endX,\n          endY,\n        });\n      }\n\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      for (const line of lines) {\n        ctx.strokeLine(line.startX, line.startY, line.endX, line.endY);\n      }\n\n      setLines(lines);\n    };\n\n    calculateLines();\n\n    return () => {\n      canvas.removeEventListener(\"resize\", calculateLines);\n    };\n  }, [gridRef]);\n\n  return (\n    <canvas\n      ref={gridRef}\n      width={200}\n      height={200}\n      style={{ border: \"1px solid black\" }}\n    />\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,OAAO,GAAGP,MAAM,GAAGQ,iBAAiB,GAAG,IAAI;EACjD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,cAAc,GAAGA,CAAA,KAAM;MAC3B,MAAMC,MAAM,GAAGL,OAAO,CAACM,OAAO;MAC9B,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;MAEnC,MAAMC,SAAS,GAAGJ,MAAM,CAACK,KAAK;MAC9B,MAAMC,UAAU,GAAGN,MAAM,CAACO,MAAM;MAEhC,MAAMC,UAAU,GAAG,CAACJ,SAAS,GAAG,CAAC,EAAEA,SAAS,GAAG,EAAE,CAAC;MAElD,MAAMK,UAAU,GAAG,CAACH,UAAU,GAAG,CAAC,EAAEA,UAAU,GAAG,EAAE,CAAC;MAEpD,MAAMT,KAAK,GAAG,EAAE;MAChB,KAAK,IAAIa,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,UAAU,CAACG,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,MAAME,MAAM,GAAGJ,UAAU,CAACE,CAAC,CAAC;QAC5B,MAAMG,MAAM,GAAG,CAAC;QAChB,MAAMC,IAAI,GAAGF,MAAM;QACnB,MAAMG,IAAI,GAAGT,UAAU;QAEvBT,KAAK,CAACmB,IAAI,CAAC;UACTJ,MAAM;UACNC,MAAM;UACNC,IAAI;UACJC;QACF,CAAC,CAAC;MACJ;MAEA,KAAK,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,UAAU,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;QAC1C,MAAME,MAAM,GAAG,CAAC;QAChB,MAAMC,MAAM,GAAGJ,UAAU,CAACC,CAAC,CAAC;QAC5B,MAAMI,IAAI,GAAGV,SAAS;QACtB,MAAMW,IAAI,GAAGF,MAAM;QAEnBhB,KAAK,CAACmB,IAAI,CAAC;UACTJ,MAAM;UACNC,MAAM;UACNC,IAAI;UACJC;QACF,CAAC,CAAC;MACJ;MAEAb,GAAG,CAACe,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEjB,MAAM,CAACK,KAAK,EAAEL,MAAM,CAACO,MAAM,CAAC;MAEhD,KAAK,MAAMW,IAAI,IAAIrB,KAAK,EAAE;QACxBK,GAAG,CAACiB,UAAU,CAACD,IAAI,CAACN,MAAM,EAAEM,IAAI,CAACL,MAAM,EAAEK,IAAI,CAACJ,IAAI,EAAEI,IAAI,CAACH,IAAI,CAAC;MAChE;MAEAjB,QAAQ,CAACD,KAAK,CAAC;IACjB,CAAC;IAEDE,cAAc,CAAC,CAAC;IAEhB,OAAO,MAAM;MACXC,MAAM,CAACoB,mBAAmB,CAAC,QAAQ,EAAErB,cAAc,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACJ,OAAO,CAAC,CAAC;EAEb,oBACEH,OAAA;IACE6B,GAAG,EAAE1B,OAAQ;IACbU,KAAK,EAAE,GAAI;IACXE,MAAM,EAAE,GAAI;IACZe,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAkB;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEN;AAACjC,EAAA,CArEQD,GAAG;AAAAmC,EAAA,GAAHnC,GAAG;AAuEZ,eAAeA,GAAG;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}