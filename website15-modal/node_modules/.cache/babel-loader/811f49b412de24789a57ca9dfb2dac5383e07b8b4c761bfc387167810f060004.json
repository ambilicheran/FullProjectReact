{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport { Line } from \"@react-native-community/svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const gridRef = useRef < SVGView > null;\n  const [lines, setLines] = useState([]);\n  useEffect(() => {\n    const calculateLines = () => {\n      const xPositions = [gridRef.current.getBoundingClientRect().left + 10, gridRef.current.getBoundingClientRect().width - 10];\n      const yPositions = [gridRef.current.getBoundingClientRect().top + 10, gridRef.current.getBoundingClientRect().height - 10];\n      const lines = [];\n      for (let i = 0; i < xPositions.length; i++) {\n        lines.push({\n          startX: xPositions[i],\n          startY: 0,\n          endX: xPositions[i],\n          endY: gridRef.current.getBoundingClientRect().height\n        });\n      }\n      for (let i = 0; i < yPositions.length; i++) {\n        lines.push({\n          startX: 0,\n          startY: yPositions[i],\n          endX: gridRef.current.getBoundingClientRect().width,\n          endY: yPositions[i]\n        });\n      }\n      setLines(lines);\n    };\n    calculateLines();\n    gridRef.current.addEventListener(\"layout\", calculateLines);\n    return () => {\n      gridRef.current.removeEventListener(\"layout\", calculateLines);\n    };\n  }, [gridRef]);\n  return /*#__PURE__*/_jsxDEV(SVGView, {\n    ref: gridRef,\n    children: lines.map(line => /*#__PURE__*/_jsxDEV(Line, {\n      stroke: \"black\",\n      strokeWidth: 1,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      ...line\n    }, line.startX + line.startY, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rXCgyOSha7nD7LaunrnbH7EjheQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Line","jsxDEV","_jsxDEV","App","_s","gridRef","SVGView","lines","setLines","calculateLines","xPositions","current","getBoundingClientRect","left","width","yPositions","top","height","i","length","push","startX","startY","endX","endY","addEventListener","removeEventListener","ref","children","map","line","stroke","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useRef, useEffect } from \"react\";\nimport { Line } from \"@react-native-community/svg\";\n\nfunction App() {\n  const gridRef = useRef < SVGView > null;\n  const [lines, setLines] = useState([]);\n\n  useEffect(() => {\n    const calculateLines = () => {\n      const xPositions = [\n        gridRef.current.getBoundingClientRect().left + 10,\n        gridRef.current.getBoundingClientRect().width - 10,\n      ];\n\n      const yPositions = [\n        gridRef.current.getBoundingClientRect().top + 10,\n        gridRef.current.getBoundingClientRect().height - 10,\n      ];\n\n      const lines = [];\n      for (let i = 0; i < xPositions.length; i++) {\n        lines.push({\n          startX: xPositions[i],\n          startY: 0,\n          endX: xPositions[i],\n          endY: gridRef.current.getBoundingClientRect().height,\n        });\n      }\n\n      for (let i = 0; i < yPositions.length; i++) {\n        lines.push({\n          startX: 0,\n          startY: yPositions[i],\n          endX: gridRef.current.getBoundingClientRect().width,\n          endY: yPositions[i],\n        });\n      }\n\n      setLines(lines);\n    };\n\n    calculateLines();\n    gridRef.current.addEventListener(\"layout\", calculateLines);\n\n    return () => {\n      gridRef.current.removeEventListener(\"layout\", calculateLines);\n    };\n  }, [gridRef]);\n\n  return (\n    <SVGView ref={gridRef}>\n      {lines.map((line) => (\n        <Line\n          key={line.startX + line.startY}\n          stroke=\"black\"\n          strokeWidth={1}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          {...line}\n        />\n      ))}\n    </SVGView>\n  );\n}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}