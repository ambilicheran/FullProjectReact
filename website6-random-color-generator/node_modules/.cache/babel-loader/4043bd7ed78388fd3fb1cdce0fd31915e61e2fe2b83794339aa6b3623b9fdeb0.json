{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App_DiagonalLine.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport classes from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const num = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const gridElement = document.querySelector(`.${classes.myGrid}`);\n    console.log(\"gridelement\", gridElement);\n    const gridRect = gridElement.getBoundingClientRect();\n    console.log(\"gridrect\", gridRect);\n\n    // Calculate the center of the grid\n    const centerX = gridRect.left + gridRect.width / 2;\n    const centerY = gridRect.top + gridRect.height / 2;\n    console.log(\"centerx\", \"centery\", centerX, centerY);\n    // Set canvas size to cover the entire grid area\n    canvas.width = gridRect.width;\n    canvas.height = gridRect.height;\n    console.log(\"canvas width\", \"canvas height\", canvas.width, canvas.height);\n\n    // Draw diagonal line relative to the center of the grid\n    ctx.beginPath();\n    ctx.moveTo(-centerX, -centerY);\n    ctx.lineTo(centerX, centerY);\n    ctx.strokeStyle = \"red\";\n    ctx.stroke();\n  }, [num]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.myGridContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.myGrid,\n        children: num.map((num, index) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.myGridItem,\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: classes.diagonalLineCanvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","num","canvasRef","canvas","current","ctx","getContext","gridElement","document","querySelector","myGrid","console","log","gridRect","getBoundingClientRect","centerX","left","width","centerY","top","height","beginPath","moveTo","lineTo","strokeStyle","stroke","children","className","myGridContainer","map","index","myGridItem","fileName","_jsxFileName","lineNumber","columnNumber","ref","diagonalLineCanvas","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App_DiagonalLine.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport classes from \"./App.module.css\";\n\nfunction App() {\n  const num = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const gridElement = document.querySelector(`.${classes.myGrid}`);\n    console.log(\"gridelement\", gridElement);\n    const gridRect = gridElement.getBoundingClientRect();\n    console.log(\"gridrect\", gridRect);\n\n    // Calculate the center of the grid\n    const centerX = gridRect.left + gridRect.width / 2;\n    const centerY = gridRect.top + gridRect.height / 2;\n\n    console.log(\"centerx\", \"centery\", centerX, centerY);\n    // Set canvas size to cover the entire grid area\n    canvas.width = gridRect.width;\n    canvas.height = gridRect.height;\n    console.log(\"canvas width\", \"canvas height\", canvas.width, canvas.height);\n\n    // Draw diagonal line relative to the center of the grid\n    ctx.beginPath();\n    ctx.moveTo(-centerX, -centerY);\n    ctx.lineTo(centerX, centerY);\n    ctx.strokeStyle = \"red\";\n    ctx.stroke();\n  }, [num]);\n\n  return (\n    <>\n      <div className={classes.myGridContainer}>\n        <div className={classes.myGrid}>\n          {num.map((num, index) => (\n            <h1 key={index} className={classes.myGridItem}>\n              {num}\n            </h1>\n          ))}\n        </div>\n        <canvas ref={canvasRef} className={classes.diagonalLineCanvas}></canvas>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}