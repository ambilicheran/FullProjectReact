{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/website1/src/Components/PostList.js\",\n  _s = $RefreshSig$();\nimport Post from \"./Post\";\nimport classes from \"./PostList.module.css\";\nimport NewPost from \"./NewPost\";\nimport { useState } from \"react\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostList(props) {\n  _s();\n  const [posts, setPosts] = useState([]);\n  function addPostHandler(postData) {\n    setPosts(existingPosts => [postData, ...existingPosts]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.modalIsVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      onClose: props.closeModal,\n      children: /*#__PURE__*/_jsxDEV(NewPost, {\n        onClose: props.closeModal,\n        onAddPost: addPostHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classes.posts,\n      children: [posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n        author: post.author,\n        book: post.book\n      }, post.body, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 41\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"blue\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No posts yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start adding some!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true);\n}\n_s(PostList, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["Post","classes","NewPost","useState","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","props","_s","posts","setPosts","addPostHandler","postData","existingPosts","children","modalIsVisible","onClose","closeModal","onAddPost","fileName","_jsxFileName","lineNumber","columnNumber","length","className","map","post","author","book","body","style","color","textAlign","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/website1/src/Components/PostList.js"],"sourcesContent":["import Post from \"./Post\"\nimport classes from \"./PostList.module.css\"\nimport NewPost from \"./NewPost\"\nimport {useState} from \"react\"\nimport Modal from \"./Modal\"\n\nfunction PostList(props) {\n    const [posts, setPosts] = useState([]);\n    function addPostHandler(postData) {\n        setPosts((existingPosts) => [\n            postData,\n            ...existingPosts\n        ]);\n    }\n    return (\n        <>{\n            props.modalIsVisible && (\n                <Modal onClose={\n                    props.closeModal\n                }>\n                    <NewPost onClose={\n                            props.closeModal\n                        }\n                        onAddPost={addPostHandler}/>\n                </Modal>\n            )\n        }\n            {\n            posts.length > 0 ? (\n                <ul className={\n                    classes.posts\n                }>\n                    {\n                    posts.map((post) => <Post key={\n                            post.body\n                        }\n                        author={\n                            post.author\n                        }\n                        book={\n                            post.book\n                        }/>)\n                } </ul>\n            ) : (\n                <div style={\n                    {\n                        color: \"blue\",\n                        textAlign: \"center\"\n                    }\n                }>\n                    <h2>No posts yet.</h2>\n                    <p>Start adding some!</p>\n                </div>\n            )\n        } </>\n    )\n}\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE3B,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,SAASW,cAAcA,CAACC,QAAQ,EAAE;IAC9BF,QAAQ,CAAEG,aAAa,IAAK,CACxBD,QAAQ,EACR,GAAGC,aAAa,CACnB,CAAC;EACN;EACA,oBACIV,OAAA,CAAAE,SAAA;IAAAS,QAAA,GACIP,KAAK,CAACQ,cAAc,iBAChBZ,OAAA,CAACF,KAAK;MAACe,OAAO,EACVT,KAAK,CAACU,UACT;MAAAH,QAAA,eACGX,OAAA,CAACJ,OAAO;QAACiB,OAAO,EACRT,KAAK,CAACU,UACT;QACDC,SAAS,EAAEP;MAAe;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACV,EAGDb,KAAK,CAACc,MAAM,GAAG,CAAC,gBACZpB,OAAA;MAAIqB,SAAS,EACT1B,OAAO,CAACW,KACX;MAAAK,QAAA,GAEGL,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBAAKvB,OAAA,CAACN,IAAI;QAGrB8B,MAAM,EACFD,IAAI,CAACC,MACR;QACDC,IAAI,EACAF,IAAI,CAACE;MACR,GAPGF,IAAI,CAACG,IAAI;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CAAC,CAAC,EACX,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEPnB,OAAA;MAAK2B,KAAK,EACN;QACIC,KAAK,EAAE,MAAM;QACbC,SAAS,EAAE;MACf,CACH;MAAAlB,QAAA,gBACGX,OAAA;QAAAW,QAAA,EAAI;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACtBnB,OAAA;QAAAW,QAAA,EAAG;MAAkB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CACR,EACJ,GAAC;EAAA,eAAE,CAAC;AAEb;AAACd,EAAA,CAlDQF,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAmDjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}