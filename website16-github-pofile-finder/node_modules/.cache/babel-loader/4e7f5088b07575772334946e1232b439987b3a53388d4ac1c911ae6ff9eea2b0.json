{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/website12-theme-switch/src/LightDarkMode.js\",\n  _s = $RefreshSig$();\nimport classes from \"*.module.css\";\nimport useLocalStorage from \"./useLocalStorage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LightDarkMode = () => {\n  _s();\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"dark\");\n  const handleToggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.lightDarkMode,\n    \"data-theme\": theme,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hello World!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleToggleTheme,\n        children: \"Change theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(LightDarkMode, \"cU7RfcDtWjaFuZGISXTRa2p1rXs=\", false, function () {\n  return [useLocalStorage];\n});\n_c = LightDarkMode;\nexport default LightDarkMode;\nvar _c;\n$RefreshReg$(_c, \"LightDarkMode\");","map":{"version":3,"names":["classes","useLocalStorage","jsxDEV","_jsxDEV","LightDarkMode","_s","theme","setTheme","handleToggleTheme","className","lightDarkMode","children","container","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/website12-theme-switch/src/LightDarkMode.js"],"sourcesContent":["import classes from \"*.module.css\";\nimport useLocalStorage from \"./useLocalStorage\";\n\nconst LightDarkMode = () => {\n  const [theme, setTheme] = useLocalStorage(\"theme\", \"dark\");\n\n  const handleToggleTheme = () => {\n    setTheme(theme === \"light\" ? \"dark\" : \"light\");\n  };\n\n  return (\n    <div className={classes.lightDarkMode} data-theme={theme}>\n      <div className={classes.container}>\n        <p>Hello World!</p>\n        <button onClick={handleToggleTheme}>Change theme</button>\n      </div>\n    </div>\n  );\n};\n\nexport default LightDarkMode;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,cAAc;AAClC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,eAAe,CAAC,OAAO,EAAE,MAAM,CAAC;EAE1D,MAAMO,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAChD,CAAC;EAED,oBACEH,OAAA;IAAKM,SAAS,EAAET,OAAO,CAACU,aAAc;IAAC,cAAYJ,KAAM;IAAAK,QAAA,eACvDR,OAAA;MAAKM,SAAS,EAAET,OAAO,CAACY,SAAU;MAAAD,QAAA,gBAChCR,OAAA;QAAAQ,QAAA,EAAG;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnBb,OAAA;QAAQc,OAAO,EAAET,iBAAkB;QAAAG,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACX,EAAA,CAfID,aAAa;EAAA,QACSH,eAAe;AAAA;AAAAiB,EAAA,GADrCd,aAAa;AAiBnB,eAAeA,aAAa;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}