{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/website5-accordian/src/Components/Accordian.js\",\n  _s = $RefreshSig$();\nimport data from \"./data\";\nimport classes from \"./Accordian.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordian = () => {\n  _s();\n  const [multi, setMulti] = useState(false);\n  const [selected, setSelected] = useState(\"\");\n  const [multiSelected, setMultiSelected] = useState([]);\n  const singleSelectionHandler = dataId => {\n    selected === dataId ? setSelected(\"\") : setSelected(dataId);\n  };\n  const multiSelectionHandler = dataId => {\n    const index = multiSelected.indexOf(dataId);\n    const newArray = index === -1 ? [...multiSelected, dataId] : multiSelected.filter(item => item !== dataId);\n    setMultiSelected(newArray);\n  };\n  const multiHandler = () => {\n    setMulti(!multi);\n    console.log(multi);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: multiHandler,\n      className: classes.multiButton,\n      children: \"Multi Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), data && data.map(dataItem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: multi ? () => {\n            multiSelectionHandler(dataItem.id);\n          } : () => {\n            singleSelectionHandler(dataItem.id);\n          },\n          className: classes.title,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: dataItem.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.expand,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), multi ? multiSelected.includes(dataItem.id) && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.answer,\n          children: dataItem.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 73\n        }, this) : selected === dataItem.id && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.answer,\n          children: dataItem.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 157\n        }, this)]\n      }, dataItem.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Accordian, \"4OdSAsQolXomsAVdVnUkwnlGDVU=\");\n_c = Accordian;\nexport default Accordian;\nvar _c;\n$RefreshReg$(_c, \"Accordian\");","map":{"version":3,"names":["data","classes","useState","jsxDEV","_jsxDEV","Accordian","_s","multi","setMulti","selected","setSelected","multiSelected","setMultiSelected","singleSelectionHandler","dataId","multiSelectionHandler","index","indexOf","newArray","filter","item","multiHandler","console","log","className","container","children","onClick","multiButton","fileName","_jsxFileName","lineNumber","columnNumber","map","dataItem","wrapper","id","title","question","expand","includes","answer","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/website5-accordian/src/Components/Accordian.js"],"sourcesContent":["import data from \"./data\";\nimport classes from \"./Accordian.module.css\"\nimport { useState } from \"react\";\n\nconst Accordian = () => {\n    const [multi, setMulti] = useState(false);\n    const [selected, setSelected] = useState(\"\");\n    const [multiSelected, setMultiSelected] = useState([]);\n    const singleSelectionHandler = (dataId) => {\n        selected === dataId ? setSelected(\"\") : setSelected(dataId);\n    }\n    const multiSelectionHandler = (dataId) => {\n        const index = multiSelected.indexOf(dataId);\n        const newArray = index === -1 ? [...multiSelected, dataId] : multiSelected.filter((item) => item !== dataId);\n        setMultiSelected(newArray);\n    }\n    const multiHandler = () => {\n        setMulti(!multi);\n        console.log(multi);\n    }\n    return (\n        <div className={classes.container}>\n            <button onClick={multiHandler} className={classes.multiButton}>Multi Selection</button>\n            {data && data.map((dataItem) => {\n                return (\n                    <div key={dataItem.id} className={classes.wrapper}>\n                        <div onClick={multi ? () => { multiSelectionHandler(dataItem.id) } : () => { singleSelectionHandler(dataItem.id) }} className={classes.title}>\n                            <h1>{dataItem.question}</h1>\n                            <span className={classes.expand}>+</span>\n                        </div>\n                        {/* {(selected && (selected === dataItem.id)) && <p className={classes.answer}>{dataItem.answer}</p>} */}\n                        {multi ? multiSelected.includes(dataItem.id) && <p className={classes.answer}>{dataItem.answer}</p> : (selected === dataItem.id) && <p className={classes.answer}>{dataItem.answer}</p>}\n                    </div>)\n            })}\n        </div >\n    )\n}\n\nexport default Accordian;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}