{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/website5-accordian/src/Components/Accordian.js\",\n  _s = $RefreshSig$();\nimport data from \"./data\";\nimport classes from \"./Accordian.module.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Accordian = () => {\n  _s();\n  const [multiSelected, setMultiSelected] = useState(false);\n  const [selected, setSelected] = useState(\"\");\n  const singleSelectionHandler = dataId => {\n    selected === dataId ? setSelected(\"\") : setSelected(dataId);\n  };\n  const multiSelectionHandler = () => {\n    setMultiSelected(!multiSelected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: multiSelectionHandler,\n      className: classes.multiButton,\n      children: \"Multi Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), data && data.map(dataItem => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.wrapper,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => {\n            singleSelectionHandler(dataItem.id);\n          },\n          className: classes.title,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: dataItem.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.expand,\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), selected && selected === dataItem.id && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classes.answer,\n          children: dataItem.answer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 70\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Accordian, \"e4jFJZJ1dgGbG2H51yayJgOrK6A=\");\n_c = Accordian;\nexport default Accordian;\nvar _c;\n$RefreshReg$(_c, \"Accordian\");","map":{"version":3,"names":["data","classes","useState","jsxDEV","_jsxDEV","Accordian","_s","multiSelected","setMultiSelected","selected","setSelected","singleSelectionHandler","dataId","multiSelectionHandler","className","container","children","onClick","multiButton","fileName","_jsxFileName","lineNumber","columnNumber","map","dataItem","wrapper","id","title","question","expand","answer","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/website5-accordian/src/Components/Accordian.js"],"sourcesContent":["import data from \"./data\";\nimport classes from \"./Accordian.module.css\"\nimport { useState } from \"react\";\n\nconst Accordian = () => {\n    const [multiSelected, setMultiSelected] = useState(false);\n    const [selected, setSelected] = useState(\"\");\n    const singleSelectionHandler = (dataId) => {\n        selected === dataId ? setSelected(\"\") : setSelected(dataId);\n    }\n    const multiSelectionHandler = () => {\n        setMultiSelected(!multiSelected);\n    }\n    return (\n        <div className={classes.container}>\n            <button onClick={multiSelectionHandler} className={classes.multiButton}>Multi Selection</button>\n            {data && data.map((dataItem) => {\n                return (\n                    <div className={classes.wrapper}>\n                        <div onClick={() => { singleSelectionHandler(dataItem.id) }} className={classes.title}>\n                            <h1>{dataItem.question}</h1>\n                            <span className={classes.expand}>+</span>\n                        </div>\n                        {(selected && (selected === dataItem.id)) && <p className={classes.answer}>{dataItem.answer}</p>}\n                    </div>)\n            })}\n        </div>\n    )\n}\n\nexport default Accordian;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,QAAQ;AACzB,OAAOC,OAAO,MAAM,wBAAwB;AAC5C,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,sBAAsB,GAAIC,MAAM,IAAK;IACvCH,QAAQ,KAAKG,MAAM,GAAGF,WAAW,CAAC,EAAE,CAAC,GAAGA,WAAW,CAACE,MAAM,CAAC;EAC/D,CAAC;EACD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAChCL,gBAAgB,CAAC,CAACD,aAAa,CAAC;EACpC,CAAC;EACD,oBACIH,OAAA;IAAKU,SAAS,EAAEb,OAAO,CAACc,SAAU;IAAAC,QAAA,gBAC9BZ,OAAA;MAAQa,OAAO,EAAEJ,qBAAsB;MAACC,SAAS,EAAEb,OAAO,CAACiB,WAAY;MAAAF,QAAA,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC/FtB,IAAI,IAAIA,IAAI,CAACuB,GAAG,CAAEC,QAAQ,IAAK;MAC5B,oBACIpB,OAAA;QAAKU,SAAS,EAAEb,OAAO,CAACwB,OAAQ;QAAAT,QAAA,gBAC5BZ,OAAA;UAAKa,OAAO,EAAEA,CAAA,KAAM;YAAEN,sBAAsB,CAACa,QAAQ,CAACE,EAAE,CAAC;UAAC,CAAE;UAACZ,SAAS,EAAEb,OAAO,CAAC0B,KAAM;UAAAX,QAAA,gBAClFZ,OAAA;YAAAY,QAAA,EAAKQ,QAAQ,CAACI;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC5BlB,OAAA;YAAMU,SAAS,EAAEb,OAAO,CAAC4B,MAAO;YAAAb,QAAA,EAAC;UAAC;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACJb,QAAQ,IAAKA,QAAQ,KAAKe,QAAQ,CAACE,EAAG,iBAAKtB,OAAA;UAAGU,SAAS,EAAEb,OAAO,CAAC6B,MAAO;UAAAd,QAAA,EAAEQ,QAAQ,CAACM;QAAM;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F,CAAC;IACd,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAAhB,EAAA,CAxBKD,SAAS;AAAA0B,EAAA,GAAT1B,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}