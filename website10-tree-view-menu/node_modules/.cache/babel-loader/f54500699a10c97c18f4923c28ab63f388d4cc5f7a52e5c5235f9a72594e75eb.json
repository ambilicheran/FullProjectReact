{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/website6-random-color-generator/src/Components/RandomColorGenerator.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport classes from \"./RandomColorGenerator.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomColorGenerator = () => {\n  _s();\n  const [colorType, setColorType] = useState(\"hex\");\n  const [color, setColor] = useState(\"#000000\");\n  const setColorTypeHexHandler = () => {\n    setColorType(\"HEX\");\n  };\n  const setColorTypeRGBHandler = () => {\n    setColorType(\"RGB\");\n  };\n  const randomize = length => {\n    return Math.floor(Math.random() * length);\n  };\n  const generateRandomHexColorHandler = () => {\n    const hexValues = [1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    let hexColor = \"#\";\n    for (let i = 0; i < 6; i++) {\n      hexColor += hexValues[randomize(hexValues.length)];\n      console.log(hexColor);\n    }\n    setColor(hexColor);\n  };\n  const generateRandomRGBColorHandler = () => {\n    const r = randomize(256);\n    const g = randomize(256);\n    const b = randomize(256);\n    const rgbColor = `rgb(${r},${g},${b})`;\n    setColor(rgbColor);\n    console.log(rgbColor);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      backgroundColor: color\n    },\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttonContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setColorTypeHexHandler,\n        className: classes.button,\n        children: \"Generate HEX Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setColorTypeRGBHandler,\n        className: classes.button,\n        children: \"Generate RGB Color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: colorType === \"HEX\" ? generateRandomHexColorHandler : generateRandomRGBColorHandler,\n        className: classes.button,\n        children: \"Generate random color\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: colorType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomColorGenerator, \"QfjpZmhB8KM81UdSAv5rfgyj9XU=\");\n_c = RandomColorGenerator;\nexport default RandomColorGenerator;\nvar _c;\n$RefreshReg$(_c, \"RandomColorGenerator\");","map":{"version":3,"names":["useState","classes","jsxDEV","_jsxDEV","RandomColorGenerator","_s","colorType","setColorType","color","setColor","setColorTypeHexHandler","setColorTypeRGBHandler","randomize","length","Math","floor","random","generateRandomHexColorHandler","hexValues","hexColor","i","console","log","generateRandomRGBColorHandler","r","g","b","rgbColor","style","backgroundColor","className","wrapper","children","buttonContainer","onClick","button","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/website6-random-color-generator/src/Components/RandomColorGenerator.js"],"sourcesContent":["import { useState } from \"react\";\nimport classes from \"./RandomColorGenerator.module.css\"\n\nconst RandomColorGenerator = () => {\n    const [colorType, setColorType] = useState(\"hex\");\n    const [color, setColor] = useState(\"#000000\");\n\n    const setColorTypeHexHandler = () => {\n        setColorType(\"HEX\");\n    }\n\n    const setColorTypeRGBHandler = () => {\n        setColorType(\"RGB\");\n    }\n\n    const randomize = (length) => {\n        return Math.floor(Math.random() * length);\n    }\n\n    const generateRandomHexColorHandler = () => {\n        const hexValues = [1, 2, 3, 4, 5, 6, 7, 8, 9, \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n        let hexColor = \"#\";\n        for (let i = 0; i < 6; i++) {\n            hexColor += hexValues[randomize(hexValues.length)];\n            console.log(hexColor);\n        }\n        setColor(hexColor);\n    }\n\n    const generateRandomRGBColorHandler = () => {\n        const r = randomize(256);\n        const g = randomize(256);\n        const b = randomize(256);\n        const rgbColor = `rgb(${r},${g},${b})`\n        setColor(rgbColor);\n        console.log(rgbColor);\n    }\n\n    return (\n        <div style={{ backgroundColor: color }} className={classes.wrapper}>\n            <div className={classes.buttonContainer}>\n                <button onClick={setColorTypeHexHandler} className={classes.button}>Generate HEX Color</button>\n                <button onClick={setColorTypeRGBHandler} className={classes.button}>Generate RGB Color</button>\n                <button onClick={(colorType === \"HEX\") ? generateRandomHexColorHandler : generateRandomRGBColorHandler} className={classes.button}>Generate random color</button>\n            </div>\n            <h1>{colorType}</h1>\n        </div>\n    )\n}\nexport default RandomColorGenerator;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}