{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js\",\n  _s = $RefreshSig$();\nimport classes from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const num = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const gridElement = document.querySelector(`.${classes.myGrid}`);\n    const gridRect = gridElement.getBoundingClientRect();\n\n    // Calculate corners of the grid based on its position on the page\n    const topLeft = {\n      x: gridRect.left,\n      y: gridRect.top\n    };\n    const bottomRight = {\n      x: gridRect.right,\n      y: gridRect.bottom\n    };\n\n    // Draw diagonal line\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, topLeft.y);\n    ctx.lineTo(bottomRight.x, bottomRight.y);\n    ctx.strokeStyle = \"red\"; // Set the line color\n    ctx.stroke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"canvas\",\n    className: classes.myGridContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.myGrid,\n      children: num.map((num, index) => /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: classes.myGridItem,\n        children: num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["classes","jsxDEV","_jsxDEV","App","_s","num","canvasRef","useRef","useEffect","canvas","current","ctx","getContext","gridElement","document","querySelector","myGrid","gridRect","getBoundingClientRect","topLeft","x","left","y","top","bottomRight","right","bottom","beginPath","moveTo","lineTo","strokeStyle","stroke","id","className","myGridContainer","children","map","index","myGridItem","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js"],"sourcesContent":["import classes from \"./App.module.css\";\n\nfunction App() {\n  const num = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const gridElement = document.querySelector(`.${classes.myGrid}`);\n    const gridRect = gridElement.getBoundingClientRect();\n\n    // Calculate corners of the grid based on its position on the page\n    const topLeft = { x: gridRect.left, y: gridRect.top };\n    const bottomRight = { x: gridRect.right, y: gridRect.bottom };\n\n    // Draw diagonal line\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, topLeft.y);\n    ctx.lineTo(bottomRight.x, bottomRight.y);\n    ctx.strokeStyle = \"red\"; // Set the line color\n    ctx.stroke();\n  }, []);\n\n  return (\n    <div id=\"canvas\" className={classes.myGridContainer}>\n      <div className={classes.myGrid}>\n        {num.map((num, index) => (\n          <h1 className={classes.myGridItem}>{num}</h1>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvC,MAAMC,SAAS,GAAGC,MAAM,CAAC,IAAI,CAAC;EAE9BC,SAAS,CAAC,MAAM;IACd,MAAMC,MAAM,GAAGH,SAAS,CAACI,OAAO;IAChC,MAAMC,GAAG,GAAGF,MAAM,CAACG,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAE,IAAGf,OAAO,CAACgB,MAAO,EAAC,CAAC;IAChE,MAAMC,QAAQ,GAAGJ,WAAW,CAACK,qBAAqB,CAAC,CAAC;;IAEpD;IACA,MAAMC,OAAO,GAAG;MAAEC,CAAC,EAAEH,QAAQ,CAACI,IAAI;MAAEC,CAAC,EAAEL,QAAQ,CAACM;IAAI,CAAC;IACrD,MAAMC,WAAW,GAAG;MAAEJ,CAAC,EAAEH,QAAQ,CAACQ,KAAK;MAAEH,CAAC,EAAEL,QAAQ,CAACS;IAAO,CAAC;;IAE7D;IACAf,GAAG,CAACgB,SAAS,CAAC,CAAC;IACfhB,GAAG,CAACiB,MAAM,CAACT,OAAO,CAACC,CAAC,EAAED,OAAO,CAACG,CAAC,CAAC;IAChCX,GAAG,CAACkB,MAAM,CAACL,WAAW,CAACJ,CAAC,EAAEI,WAAW,CAACF,CAAC,CAAC;IACxCX,GAAG,CAACmB,WAAW,GAAG,KAAK,CAAC,CAAC;IACzBnB,GAAG,CAACoB,MAAM,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE7B,OAAA;IAAK8B,EAAE,EAAC,QAAQ;IAACC,SAAS,EAAEjC,OAAO,CAACkC,eAAgB;IAAAC,QAAA,eAClDjC,OAAA;MAAK+B,SAAS,EAAEjC,OAAO,CAACgB,MAAO;MAAAmB,QAAA,EAC5B9B,GAAG,CAAC+B,GAAG,CAAC,CAAC/B,GAAG,EAAEgC,KAAK,kBAClBnC,OAAA;QAAI+B,SAAS,EAAEjC,OAAO,CAACsC,UAAW;QAAAH,QAAA,EAAE9B;MAAG;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAC7C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtC,EAAA,CAhCQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAkCZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}