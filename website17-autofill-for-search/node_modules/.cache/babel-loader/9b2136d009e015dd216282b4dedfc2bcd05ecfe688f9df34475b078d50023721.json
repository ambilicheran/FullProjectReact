{"ast":null,"code":"var _jsxFileName = \"/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport classes from \"./App.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const num = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const gridElement = document.querySelector(`.${classes.myGrid}`);\n    console.log(\"gridelement\", gridElement);\n    const gridRect = gridElement.getBoundingClientRect();\n    console.log(\"gridrect\", gridRect);\n\n    // Calculate corners of the grid based on its position on the page\n    const topLeft = {\n      x: gridRect.left,\n      y: gridRect.top\n    };\n    const bottomRight = {\n      x: gridRect.right,\n      y: gridRect.bottom\n    };\n    console.log(\"topleft\", \"bottomright\", topLeft, bottomRight);\n    // Draw diagonal line\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, topLeft.y);\n    ctx.lineTo(bottomRight.x, bottomRight.y);\n    ctx.strokeStyle = \"red\"; // Set the line color\n    ctx.stroke();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.myGridContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.myGrid,\n        children: num.map((num, index) => /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: classes.myGridItem,\n          children: num\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        className: classes.diagonalLineCanvas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: classes.diagonalLineCanvas\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useEffect","classes","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","num","canvasRef","canvas","current","ctx","getContext","gridElement","document","querySelector","myGrid","console","log","gridRect","getBoundingClientRect","topLeft","x","left","y","top","bottomRight","right","bottom","beginPath","moveTo","lineTo","strokeStyle","stroke","children","className","myGridContainer","map","index","myGridItem","fileName","_jsxFileName","lineNumber","columnNumber","ref","diagonalLineCanvas","_c","$RefreshReg$"],"sources":["/Users/Ambili/Desktop/FullProjectReact/for-small-learning-trials/src/App.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport classes from \"./App.module.css\";\n\nfunction App() {\n  const num = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n  const canvasRef = useRef(null);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const gridElement = document.querySelector(`.${classes.myGrid}`);\n    console.log(\"gridelement\", gridElement);\n    const gridRect = gridElement.getBoundingClientRect();\n    console.log(\"gridrect\", gridRect);\n\n    // Calculate corners of the grid based on its position on the page\n    const topLeft = { x: gridRect.left, y: gridRect.top };\n    const bottomRight = { x: gridRect.right, y: gridRect.bottom };\n    console.log(\"topleft\", \"bottomright\", topLeft, bottomRight);\n    // Draw diagonal line\n    ctx.beginPath();\n    ctx.moveTo(topLeft.x, topLeft.y);\n    ctx.lineTo(bottomRight.x, bottomRight.y);\n    ctx.strokeStyle = \"red\"; // Set the line color\n    ctx.stroke();\n  }, []);\n\n  return (\n    <>\n      <div className={classes.myGridContainer}>\n        <div className={classes.myGrid}>\n          {num.map((num, index) => (\n            <h1 key={index} className={classes.myGridItem}>\n              {num}\n            </h1>\n          ))}\n        </div>\n        <canvas ref={canvasRef} className={classes.diagonalLineCanvas}></canvas>\n      </div>\n      <canvas ref={canvasRef} className={classes.diagonalLineCanvas}></canvas>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}